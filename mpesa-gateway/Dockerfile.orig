#Use alpine
#FROM openjdk:8-jdk-alpine
FROM openjdk:14-jdk

#FROM openjdk:11
ARG DOCKER_SPRING_PROFILES_ACTIVE
ENV SPRING_PROFILES_ACTIVE $DOCKER_SPRING_PROFILES_ACTIVE

ENV TZ Africa/Nairobi

#RUN apk update
#RUN apk add --no-cache tzdata

# ENV TZ Africa/Nairobi

# Add Maintainer info
LABEL maintainer="itambo.ibrahim@gmail.com"

# Add a volume pointing to /tmp
VOLUME /tmp

# WORKDIR /usr/src/java-code
# COPY . /usr/src/java-code/
# RUN mvn package -DskipTests

# WORKDIR /usr/src/java-app
# RUN cp /usr/src/java-code/target/*.jar ./app.jar

# Make port 8761 available to the world outside this container
EXPOSE 8080

# The fat jar
#ARG JAR_FILE=target/ussd-rc2.jar
#ARG JAR_FILE=target/ussd-snapshot.jar
ARG JAR_FILE=target/*.jar

# Add the application's jar to the container
ADD ${JAR_FILE} app.jar

# Run the jar file
ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]



#Aftermath
#========================================
#Build
#docker build -t zeguru/ussd-microservice:3.0 .
#docker build --memory=1g --memory-swap=1g -t zeguru/ussd-microservice:3.0 .

#Push
#docker push zeguru/ussd-microservice:3.0

#Docker Test
#docker run -e "SPRING_PROFILES_ACTIVE=uat" --name ussd-microservice --restart unless-stopped -d -p 8080:8080 zeguru/ussd-microservice:3.0
#docker service create --replicas 3 --name alert-engine-service -p 38080:8080 zeguru/ussd-microservice:3.0

#Pod / TESTING
#kubectl apply -f docs/pod.yml

#Deployment
#kubectl apply -f docs/deployment.yml

#Service
#kubectl apply -f docs/service.yml
